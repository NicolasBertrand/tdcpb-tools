#!/usr/bin/env python
# -*- coding: utf-8 -*-
# -*- Mode: Python -*-
# vim:si:ai:et:sw=4:sts=4:ts=4
#
#
# Copyright Nicolas Bertrand (nico@isf.cc), 2014
#
# This file is part of DcpIngest.
#
#    DcpIngest is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    DcpIngest is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with DcpIngest.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Usage:
# DcpCheckHash.py /path/to/DCP
#
# The script verify the hash of each file in the DCP

import sys
#import logging
import argparse
import os.path


from tdcpblib.common import TdcpbException
from tdcpblib.common import create_logger
from tdcpblib import logger
from tdcpblib.tdcpb_checks import tdcpb_check

def main(argv):
    parser = argparse.ArgumentParser(description='DCP intgrity(hash) verification')
    parser.add_argument('dcp_path',
                metavar='DCP_PATH',
                type = str,
                nargs = "?",
                help = 'DCP path' )
    #parser.add_argument('-d', '--debug', dest='debug', action='store_const',
    #               const=logging.DEBUG, default=logging.INFO,
    #               help='debug mode')

    args = parser.parse_args()
    if not args.dcp_path:
        logger.error("No DCP source")
        return 1
    try:
        tdcpb_check(args.dcp_path, u'long')
    except TdcpbException as _err:
        logger.error(_err)
        return 1
    return 0

if __name__ == "__main__":
   sys.exit(main(sys.argv))

